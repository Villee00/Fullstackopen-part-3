{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Number.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterdPerson","onChangeHandle","value","onChange","PersonForm","addPerson","newName","handleChangeName","newNumber","handleChangeNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","personID","delete","id","put","Number","deletePerson","person","name","number","onClick","Persons","personsToShow","persons","filter","toLowerCase","startsWith","map","Notification","message","style","color","backgroundColor","padding","App","useState","setPersons","setNewName","setNewNumber","setFilterdPerson","notificationMessage","setNotificationMessage","useEffect","personService","event","target","preventDefault","personObj","some","obj","oldPerson","find","window","confirm","returnedPerson","per","setTimeout","concat","newList","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be50fad7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n const Filter = ({ filterdPerson, onChangeHandle }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filterdPerson} onChange={onChangeHandle}></input>\r\n    </div>\r\n  );\r\n};\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = ({ addPerson, newName, handleChangeName, newNumber, handleChangeNumber }) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input\r\n          value={newName}\r\n          onChange={handleChangeName} />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value={newNumber}\r\n          onChange={handleChangeNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons/'\r\n\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)  \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson =>{\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = personID =>{\r\n    const request = axios.delete(baseUrl + personID)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, newPerson) =>{\r\n    const request = axios.put(baseUrl + id, newPerson);\r\n    return request.then(response => response.data)\r\n}\r\nexport default {getAll, create, deletePerson, updatePerson}","import React from 'react';\r\nimport persons from '../services/persons'\r\n\r\nconst Number = ({deletePerson, person }) => {\r\n  return (\r\n    <div>\r\n      <p>{person.name} {person.number}</p>\r\n      <button onClick={() => deletePerson(person)}>delete</button>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Number\r\n","import React from 'react';\r\nimport Number from './Number';\r\n\r\nconst Persons = ({deletePerson, filterdPerson, persons }) => {\r\n  const personsToShow = persons.filter(person => person.name.toLowerCase().startsWith(filterdPerson.toLowerCase()));\r\n  return (\r\n    <div>\r\n      {personsToShow.map(person => <Number key={person.name} person={person} deletePerson={deletePerson}/>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst Notification = ({message}) =>{\r\n    const errorStyle = {\r\n        color: 'white',\r\n        backgroundColor:'darkgrey',\r\n        padding: '10px'\r\n    }\r\n    \r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div style={errorStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterdPerson, setFilterdPerson ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage ] = useState('')\r\n\r\n  const handleChangeName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleChangeNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleChangeFilter = (event) => {\r\n    setFilterdPerson(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObj = {\r\n      name: newName,\r\n      number: newNumber\r\n    } \r\n\r\n    if(persons.some(obj => obj.name === newName)) {\r\n      const oldPerson = persons.find(obj => obj.name === newName);\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)){\r\n        personService\r\n        .updatePerson(oldPerson.id, personObj)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(per => per !== oldPerson ? per : returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        setNotificationMessage(`Replaced ${newName}`);\r\n\r\n        setTimeout(() =>{\r\n          setNotificationMessage(null)\r\n        }, 2000)\r\n      }\r\n      return\r\n    }\r\n\r\n\r\n    personService\r\n      .create(personObj)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n    setNotificationMessage(`Added ${newName}`);\r\n\r\n    setTimeout(() =>{\r\n      setNotificationMessage(null)\r\n    }, 2000)\r\n  }\r\n\r\n  const deletePerson = (person) =>{\r\n    if(window.confirm(`Delete ${person.name}?`)){\r\n      personService\r\n      .deletePerson(person.id)\r\n      .then(() =>{\r\n        const newList = persons.filter((number) => number.id !== person.id);\r\n        setPersons(newList);\r\n        setNotificationMessage(`Deleted ${person.name}`);\r\n      })\r\n      .catch(error =>{\r\n        setNotificationMessage(`Information of ${person.name} has already been removed from the server` )\r\n      })\r\n\r\n\r\n      setTimeout(() =>{\r\n        setNotificationMessage(null)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const hook = () => {\r\n    personService\r\n    .getAll()\r\n    .then(persons => {\r\n      setPersons(persons);\r\n    })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage}/>\r\n      <Filter filterdPerson={filterdPerson} onChangeHandle={handleChangeFilter}/>\r\n\r\n      <h2>Add a new</h2>\r\n\r\n      <PersonForm \r\n      addPerson={addPerson} \r\n      newName={newName} \r\n      handleChangeName={handleChangeName} \r\n      newNumber={newNumber} \r\n      handleChangeNumber={handleChangeNumber}/>\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <Persons deletePerson={deletePerson} filterdPerson={filterdPerson} persons={persons}/>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default App\r\n\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>,\n   document.getElementById('root')\n   )"],"sourceRoot":""}